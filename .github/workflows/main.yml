name: Code checks and S3/EC2 deployment

on:
  push:
    branches:
      - main

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: "us-east-1"
  S3_BUCKET: my-secure-bucket

jobs:
  code-checks:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js and Python
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Install pylint
        run: pip install pylint

      - name: Pylint check
        run: pylint lambda_function.py

      - name: Install flake8
        run: pip install flake8

      - name: Flake8 check
        run: flake8 lambda_function.py

      - name: Install bandit
        run: pip install bandit

      - name: Bandit check
        run: bandit -r lambda_function.py

      - name: Download config.ini from S3
        run: aws s3 cp s3://${{ env.S3_BUCKET }}/config.ini .

      - name: Run Snyk
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -
          sudo apt-get install -y nodejs
          sudo npm install -g snyk
          snyk auth $SNYK_TOKEN
          snyk test --file=requirements.txt

      - name: Save pylint score as environment variable
        id: pylint-score
        run: echo "PYLINT_SCORE=$(pylint --output-format=text lambda_function.py | awk '/Your code has been rated at/ { print $9 }')" >> $GITHUB_ENV
        shell: bash


  deploy-s3-ec2:
    runs-on: ubuntu-latest
    needs: code-checks
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js and Python
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'
      
      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Download config.ini from S3
        run: aws s3 cp s3://${{ env.S3_BUCKET }}/config.ini .

      - name: Create S3 bucket and EC2 instance
        run: python lambda_function.py
